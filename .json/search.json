[{"group":"blog","slug":"blog/2019-04-18-what-s-haskell","frontmatter":{"title":"What's Haskell?","date":"2019-04-18T20:09:00.000Z","tags":["Haskell"]},"content":"\nSo, you are new in [Haskell](http://wikipedia.org/wiki/Haskell_programming_language), and you want to know the basis, great! \n\n<img src=\"/images/haskell-logo.png\" alt=\"Haskell\" title=\"Haskell logo\"></img>Haskell is a _purely functional_ [programming language.](https://en.wikipedia.org/wiki/Programming_language) What this is? Well, the variables do not change over time, the variable will always stay setted to the sepcific value given. So, if you called a function twice, with the same parameters given, the output will be always the same. This property is known as _referential transparency_. It lets you evaluate a function, and get to know if it's correct. \n\nHaskell is known as a _lazy_ programming language. This means that it will do just the bare minimum computation required to show the result of a piece of code (if you tell him to show it).\n\nAnd not less important, Haskell is _statically typed_ and has _type inference_, so, if you do not specify the [type](https://en.wikipedia.org/wiki/Data_type) of a function, Haskell will intelegently figure it out. And, if you mess up with the types, the [compiler](https://en.wikipedia.org/wiki/Compiler) will tell you the error and, most of the times, specificly show you in wich line is it that everything blowed up. This helps to fix errors in early stages of development, so the probabilities of the program failing once it is released will be decreased.\n\n<script type=\"application/ld+json\">\n\\{\n \"@context\": \"https://schema.org\", \n \"@type\": \"BlogPosting\",\n \"url\": \"https://lautarolobo.xyz/blog/what-s-haskell\",\n \"mainEntityOfPage\": \"https://lautarolobo.xyz/blog/what-s-haskell\",\n \"headline\": \"What's Haskell?\",\n \"alternativeHeadline\": \"Brief introduction to Haskell\",\n \"genre\": \"Haskell\", \n \"keywords\": [\n  \"Haskell\", \n  \"Programming\", \n  \"Computer-Science\"\n], \n \"wordcount\": \"210\",\n \"datePublished\": \"2019-04-18\",\n \"dateCreated\": \"2019-04-18\",\n \"dateModified\": \"2024-06-25\",\n \"description\": \"You are new in Haskell and want to know the base of it. Here I'll show what is Haskell, and what is with it that is so cool.\",\n \"isFamilyFriendly\": \"true\",\n \"image\": \"https://imgsafe.org/image/5709e8ceba\",\n \"publisher\": \\{\n  \"@type\": \"Organization\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"logo\": \\{  \n   \"@type\": \"ImageObject\",\n   \"author\": \"Lautaro Jordan Lobo Ravarotto\",\n   \"url\": \"https://imgsafe.org/image/5709e8ceba.png\"\n   }\n  },\n \"author\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }\n   },\n \"creator\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }   \n   }\n  }\n }\n},\n</script>"},{"group":"blog","slug":"blog/2019-04-21-installing-ghc-in-linux","frontmatter":{"title":"Installing Haskell Compiler in Linux","date":"2019-04-21T14:14:00.000Z","tags":["Haskell","Linux"]},"content":"\nAssuming that you know what Haskell is (if not, [read this brief introduction](https://lautarolobo.xyz/blog/what-s-haskell/)), and you know what the Glasgow Haskell Compiler is (check [this](https://en.wikipedia.org/wiki/Glasgow_Haskell_Compiler) if you don't), I'll show you how to get GHC up and running in your computer.\n\nFirst things first, open the terminal and type:\n\n```console\nsudo apt-get install haskell-platform\n```\n\nThis command should work on the most common Linux distros out there ([Debian](https://www.debian.org/index.en.html), [Mint](https://linuxmint.com/), [Ubuntu](https://www.ubuntu.com/)). \n\nPress Enter, and you will be asked to type your password, after you type it you'll see a list of sugested packages, those won't be installed, and a list of the packages that will be installed, with the amount of space that they are willing to occupe in your drive. Classic pre-installation info. Then you must type _s_ if you want to proceed with the installation, or _n_ if you regret.\n\nHave in mind that the installation process once you type _s_, may take some time depending in your internet conection.\n\nFollowing this simple operation, you have your Glasgow Haskell Compiler installed, ready to use.\n\nIf you want to make sure that it's installed, just open the terminal and simply type:\n\n```console\nghci\n```\n\nTherefore you should see in your console something like this:\n\n```console\nGHCi, version x.y.z: http://www.haskell.org/ghc/  :? for help\nPrelude> \n```\n <hr></hr>\n\nDidn't work? [Tell me](mailto:contact@lautarolobo.xyz) what went wrong and I'll be glad to help you out!\n\nIf you want to write your first Haskell function and test it with GHC, [click me!](https://lautarolobo.xyz/blog/first-haskell-function/)\n\n<script type=\"application/ld+json\">\n\\{\n \"@context\": \"https://schema.org\", \n \"@type\": \"BlogPosting\",\n \"url\": \"https://lautarolobo.xyz/blog/installing-ghc-in-linux\",\n \"mainEntityOfPage\": \"https://lautarolobo.xyz/blog/installing-ghc-in-linux\",\n \"headline\": \"Installing Haskell Compiler in Linux\",\n \"alternativeHeadline\": \"How To Install GHC\",\n \"genre\": \"Haskell\", \n \"keywords\": [\n  \"Programming\", \n  \"Haskell\", \n  \"Compiler\", \n  \"Computer Science\" ,\n  \"Linux\"\n], \n \"wordcount\": \"275\",\n \"datePublished\": \"2019-04-21\",\n \"dateCreated\": \"2019-04-21\",\n \"dateModified\": \"2024-06-25\",\n \"description\": \"If you want to test Haskell in your own computer like a real developer, you must have GHC, come and find what it is!\",\n \"isFamilyFriendly\": \"true\",\n \"image\": \"https://imgsafe.org/image/5709e8ceba\",\n \"publisher\": \\{\n  \"@type\": \"Organization\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"logo\": \\{  \n   \"@type\": \"ImageObject\",\n   \"author\": \"Lautaro Jordan Lobo Ravarotto\",\n   \"url\": \"https://imgsafe.org/image/5709e8ceba.png\"\n   }\n  },\n \"author\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }\n   },\n \"creator\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }   \n   }\n  }\n }\n},\n</script>"},{"group":"blog","slug":"blog/2019-05-01-first-haskell-function","frontmatter":{"title":"Your First Haskell Function","date":"2019-05-02T00:42:00.000Z","tags":["Haskell"]},"content":"\nYour first Haskell function. Who would say that you would come this far, ah. \n\nA function takes some parameters and shows up an output, after a computational process that used the parameters in some way.\n\nThe function that we are going to define today, since it's the first one, will be basic. You will give it two numbers and it'll sum them, giving you back a single number. But, what kind of number? Any number? Actually not, this function will work with just Integers. You will clarifiy this by writing the _type_ of the function.\n\nThe first thing that you should know about writing functions in Haskell, is that you should always define the type of the function before you define the function itself, if you don't define it, Haskell will figure out which type is the best to match with your function, most of the time it will figure it out right, but some times may miss match the inferenced type and your function won't work.\n\n```haskell\nsumBoth :: Int -> Int -> Int\n```\n\nWe defined the type; it takes one Integer, then another Integer, and the output will be an Integer, great. You may have noticed that I named the function \"sumBoth\", this is because it's important that the function's name tells you what that particular function does and also, the name should be short, so when you call it you won't waste much time writing it. It may seem a silly advise but trust me, getting used to good practices will save you tons of bugs.\n\nNow, the function definition:\n\n```haskell \nsumBoth x y = x + y\n```\n\nAnd that's it! Now save your file with _.hs_ extension, and then open up the terminal, we will test this function there. Go to the directory where you saved your file and simply write\n\n```console\nghci\n```\n\nYou'll see something like this:\n\n```console\nGHCi, version x.y.z: http://www.haskell.org/ghc/  :? for help\nPrelude>\n```\n\nThere write\n\n```console\n:load filename.hs\n```\n\nAnd this should show up:\n\n```console\n[1 of 1] Compiling Main             ( filename.hs, interpreted )\nOk, modules loaded: Main.\n*Main>\n```\n\n\nThen call sumBoth and in the line below you'll see the result:\n\n```console\n*Main> sumBoth 5 4\n9\n```\n\n<hr></hr>\n\nSomething went wrong? Please [tell me](mailto:contact@lautarolobo.xyz) and I'll be glad to help you out!\n\nWant to try the next level? [Go ahead!](https://lautarolobo.xyz/blog/recursive-function-haskell)\n\n<script type=\"application/ld+json\">\n\\{\n \"@context\": \"https://schema.org\", \n \"@type\": \"BlogPosting\",\n \"url\": \"https://lautarolobo.xyz/blog/first-haskell-function\",\n \"mainEntityOfPage\": \"https://lautarolobo.xyz/blog/first-haskell-function\",\n \"headline\": \"Your First Haskell Function\",\n \"alternativeHeadline\": \"You won't be a total newbie at Haskell anymore!\",\n \"genre\": \"Haskell\", \n \"keywords\": [\n  \"Haskell\", \n  \"Programming\", \n  \"Computer Science\"\n],  \n \"wordcount\": \"380\",\n \"datePublished\": \"2019-05-01\",\n \"dateCreated\": \"2019-05-01\",\n \"dateModified\": \"2024-06-25\",\n \"description\": \"You want to go deeper in Haskell? Well, let's do it! We will define our first function, easy peasy.\",\n \"isFamilyFriendly\": \"true\",\n \"image\": \"https://imgsafe.org/image/5709e8ceba\",\n \"publisher\": \\{\n  \"@type\": \"Organization\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"logo\": \\{  \n   \"@type\": \"ImageObject\",\n   \"author\": \"Lautaro Jordan Lobo Ravarotto\",\n   \"url\": \"https://imgsafe.org/image/5709e8ceba.png\"\n   }\n  },\n \"author\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }\n   },\n \"creator\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }   \n   }\n  }\n }\n},\n</script>"},{"group":"blog","slug":"blog/2019-05-17-recursive-function-haskell","frontmatter":{"title":"A Recursive Function in Haskell","date":"2019-05-17T20:05:00.000Z","tags":["Haskell","Recursion"]},"content":"\nimport Latex from 'src/content/latex.astro'\n\n<img src=\"/images/wowed-sculpture.webp\" alt=\"WOW\" title=\"WOWed Sculpture\"></img>Ready to get your head cracked? Ok, let's define a simple function that multiplies each number of a list of numbers by 2. We will give this function the name of \"by2\".\n\nSo, you have a function that takes a list of numbers as a parameter, and after the computation process shows a list of numbers. How do you write this in Haskell? Well:\n\n```haskell\nby2 :: [Int] -> [Int]\n```\n\nThe brackets represent a list of something, in this case Integers. This is how you define a _type_ in Haskell, I talked about that in [my previous post.](https://lautarolobo.xyz/blog/first-haskell-function)\n\nOnce the type is defined, the next step is to define the actual function. First, you call the function, with the parameters, and then you type the process that the function must do, at the end, you should have something like this:\n\n```haskell\nby2 x:xs = (2 * x) : by2 xs\n```\n\n<img src=\"/images/whatt.webp\" alt=\"What?\" title=\"What?\"></img>\nHm, let me explain what is that code saying, you have a list with at least one element (an Integer in this case), by2 takes the first element and multiplies it by 2, nothing new, but then I'm including the element multiplied by 2 in... the function without the first element? Seems weird? Well, next and last line of code, and then I will explain much deeply a few concepts that you need to know to fully understand this function.\n\n```haskell\nby2 [] = []\n```\n\nFirst af all, I'm ussing _pattern matching_, a way to defining functions that compares patterns, the one given in the function definition with the paramater given. If you want to know more about it, check [this](http://learnyouahaskell.com/syntax-in-functions#pattern-matching).\n\nRemember at the start when I sayd \"a simple function\"? When, actually I may have been wrong, this one is not quite simple, because introduces an important concept besides pattern matching, _recursion_. by2 is a recursive function, meaning that the function is applied inside its own definition. To make a function work with recursion, you must make the recursive call smaller that the parameter given. Go back to your code and you will se this, the first element of the list is no more appearing in the recursive call of by2. Also, you always need to write your base case, the smaller case that the function may encounter, in this case is a list with no elements, just like in the second line of code that I showed you. Then, the recursive call will be getting smaller until the parameter given to the function will be... an empty list! And there, each element, in order, will be inserted in this list. \n\nIt's tough to understand, you may get it better with an example:\n\n```console\nby2 [7,3,5]\n[14,6,10]\n```\n\nThis is what happened there:\n\n<Latex formula='\n  $$(2 \\times 7) \\triangleright by2 [3,5] \\rightarrow$$ \n  $$(2 \\times 7) \\triangleright ((2 \\times 3) \\triangleright by2 [5]) \\rightarrow$$ \n  $$(2 \\times 7) \\triangleright ((2 \\times 3) \\triangleright ((2 \\times 5) \\triangleright by2 [\\hspace{2mm}])) \\rightarrow $$\n  $$(2 \\times 7) \\triangleright ((2 \\times 3) \\triangleright ((2 \\times 5) \\triangleright [\\hspace{2mm}])$$'\n></Latex>\n\nAnd then, solves the multiplications and each number goes back where it was; 10 goes inside the empty list, then 6 and last 14.\n\nWell, I think we explained a few concepts in the way, pattern matching and recursion. But... have you tried the function? Open the terminal, then the compiler, load your file and test by2!\n\nYou can try other parameters, like the empty list, or a list with words. Start playing around, changing the definition of by2, creating a by3, or a plus2; new functions that accept more and different parameters, with new definitions. \n\nIf anything went wrong, [tell me](mailto:contact@lautarolobo.xyz) and I'll be glad to help you out!\n\nYou've made it this far, kid. Impressive. Don't stop learning!\n\n<script type=\"application/ld+json\">\n\\{\n \"@context\": \"https://schema.org\", \n \"@type\": \"BlogPosting\",\n \"url\": \"https://lautarolobo.xyz/blog/recursive-function-haskell\",\n \"mainEntityOfPage\": \"https://lautarolobo.xyz/blog/recursive-function-haskell\",\n \"headline\": \"A Recursive Function in Haskell\",\n \"alternativeHeadline\": \"Recursion 101\",\n \"genre\": \"Haskell\", \n \"keywords\": [\n  \"Programming\", \n  \"Haskell\", \n  \"Recursion\", \n  \"Computer Science\" \n],\n \"wordcount\": \"583\",\n \"datePublished\": \"2019-05-17\",\n \"dateCreated\": \"2019-05-17\",\n \"dateModified\": \"2019-05-22\",\n \"description\": \"This is the next level in Haskell programming, we are going to define a simple function applying recursion!\",\n \"isFamilyFriendly\": \"true\",\n \"image\": \"https://imgsafe.org/image/5709e8ceba\",\n \"publisher\": \\{\n  \"@type\": \"Organization\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"logo\": \\{  \n   \"@type\": \"ImageObject\",\n   \"author\": \"Lautaro Jordan Lobo Ravarotto\",\n   \"url\": \"https://imgsafe.org/image/5709e8ceba.png\"\n   }\n  },\n \"author\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }\n   },\n \"creator\": \\{\n  \"@type\": \"Person\",\n  \"name\": \"Lautaro Jordan Lobo Ravarotto\",\n  \"url\": \"https://lautarolobo.xyz\",\n  \"email\": \"contact@lautarolobo.xyz\",\n  \"birthDate\": \"2000-04-12\",\n  \"gender\": \"male\",\n  \"nationality\": \"Argentina\",\n  \"alumniOf\": \\{\n   \"@type\": \"CollegeOrUniversity\",\n   \"legalName\": \"National University of Córdoba\",\n   \"sameAs\": \"https://en.wikipedia.org/wiki/National_University_of_C%C3%B3rdoba\",\n   \"location\": \\{\n    \"@type\": \"Place\",\n    \"sameAs\": \"http://unc.edu.ar\",\n    \"name\": \"National University of Córdoba\",\n    \"address\": \\{\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"Av. Haya de la Torre s/n\",\n      \"addressCountry\": \"Argentina\",\n      \"addressLocality\": \"Córdoba\",\n      \"postalCode\": \"5000\" \n      }\n     }\n    }   \n   }\n  }\n }\n},\n</script>\n\n"},{"group":"blog","slug":"blog/post-1","frontmatter":{"title":"How to build an Application with modern Technology","meta_title":"","description":"this is meta description","date":"2022-04-04T05:00:00.000Z","image":"/images/image-placeholder.png","author":"John Doe","tags":["nextjs","tailwind"],"draft":false},"content":"\nNemo vel ad consectetur namut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\n## Creative Design\n\nNam ut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\n> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n"},{"group":"blog","slug":"blog/post-2","frontmatter":{"title":"How to build an Application with modern Technology","meta_title":"","description":"this is meta description","date":"2022-04-04T05:00:00.000Z","image":"/images/image-placeholder.png","author":"Sam Wilson","tags":["technology","tailwind"],"draft":false},"content":"\nNemo vel ad consectetur namut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\n## Creative Design\n\nNam ut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\n> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n"},{"group":"blog","slug":"blog/post-3","frontmatter":{"title":"How to build an Application with modern Technology","meta_title":"","description":"this is meta description","date":"2022-04-04T05:00:00.000Z","image":"/images/image-placeholder.png","author":"John Doe","tags":["software","tailwind"],"draft":false},"content":"\nNemo vel ad consectetur namut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\n## Creative Design\n\nNam ut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\n> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n"},{"group":"blog","slug":"blog/post-4","frontmatter":{"title":"How to build an Application with modern Technology","meta_title":"","description":"this is meta description","date":"2022-04-04T05:00:00.000Z","image":"/images/image-placeholder.png","author":"John Doe","tags":["silicon","technology"],"draft":false},"content":"\nNemo vel ad consectetur namut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\n## Creative Design\n\nNam ut rutrum ex, venenatis sollicitudin urna. Aliquam erat volutpat. Integer eu ipsum sem. Ut bibendum lacus vestibulum maximus suscipit. Quisque vitae nibh iaculis neque blandit euismod.\n\n> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo vel ad consectetur ut aperiam. Itaque eligendi natus aperiam? Excepturi repellendus consequatur quibusdam optio expedita praesentium est adipisci dolorem ut eius!\n"}]
